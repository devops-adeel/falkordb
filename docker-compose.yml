# FalkorDB Setup for OrbStack on M3 MacBook Pro
# Optimized for multiple Graphiti instances with shared knowledge graph

services:
  falkordb:
    image: falkordb/falkordb:latest
    platform: linux/arm64    # Critical for M3 performance
    container_name: falkordb
    # No port mapping needed - OrbStack provides access via falkordb.local:6379
    labels:
      - "dev.orbstack.domains=falkordb.local,falkordb-browser.local"  # Custom domains for access
      - "dev.orbstack.http-port=3000"         # Explicitly specify HTTP port for browser UI
      # Backup integration with offen/docker-volume-backup
      - "docker-volume-backup.archive-pre=/bin/sh -c 'redis-cli BGSAVE && sleep 2'"
      - "docker-volume-backup.exec-label=falkordb-backup"
      - "docker-volume-backup.archive-post=/bin/sh -c 'echo Backup completed at $(date)'"
    volumes:
      - falkordb_data:/var/lib/falkordb/data  # Named volume for persistence
    deploy:
      resources:
        limits:
          memory: 8GB
    environment:
      # NextAuth configuration for browser UI
      - NEXTAUTH_URL=http://falkordb-browser.local
      - AUTH_TRUST_HOST=true
      - NEXTAUTH_URL_INTERNAL=http://falkordb:3000
      # NextAuth secret (injected via 1Password in secure mode, defaults to insecure value)
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-insecure-default-secret-CHANGE-IN-PRODUCTION}
      # Optional Redis AUTH password (future feature, currently not enforced by FalkorDB)
      - FALKORDB_AUTH_PASSWORD=${FALKORDB_AUTH_PASSWORD:-}
      # Optional integration API keys (only needed if using these features)
      - GRAPHITI_API_KEY=${GRAPHITI_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      # Performance tuning optimized to prevent memory explosions from duplicate UUIDs
      # NODE_CREATION_BUFFER reduced from default 16384 to 512 (32x reduction)
      - FALKORDB_ARGS=THREAD_COUNT 8 NODE_CREATION_BUFFER 512 QUERY_MEM_CAPACITY 268435456 CACHE_SIZE 50 OMP_THREAD_COUNT 2 EFFECTS_THRESHOLD 100
      # Redis server configuration (memory limits and persistence)
      - REDIS_ARGS=--maxmemory 2gb --maxmemory-policy volatile-lru --save 3600 10 --save 300 100
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "timeout", "10", "redis-cli", "ping"]
      interval: 60s
      timeout: 10s      # Increased timeout for health checks
      retries: 5        # More tolerance for transient failures
      start_period: 60s # More time for initialization

volumes:
  falkordb_data:
    driver: local

networks:
  default:
    external: true
    name: orbstack-shared
